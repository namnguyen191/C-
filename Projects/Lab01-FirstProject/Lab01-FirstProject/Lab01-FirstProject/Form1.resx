<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        scpXsjPbMuaarjmbFu/Vsy8REAA7
</value>
  </data>
</root>